                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Fri Feb 24 16:50:55 2012
                              5 ;--------------------------------------------------------
                              6 	.module xdata
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ReadMax
                             13 	.globl _WriteMax
                             14 	.globl _ReadXData
                             15 	.globl _WriteXData
                             16 	.globl _SPR0
                             17 	.globl _SPR1
                             18 	.globl _CPHA
                             19 	.globl _CPOL
                             20 	.globl _SPIM
                             21 	.globl _SPE
                             22 	.globl _WCOL
                             23 	.globl _ISPI
                             24 	.globl _I2CI
                             25 	.globl _I2CTX
                             26 	.globl _I2CRS
                             27 	.globl _I2CM
                             28 	.globl _MDI
                             29 	.globl _MCO
                             30 	.globl _MDE
                             31 	.globl _MDO
                             32 	.globl _CS0
                             33 	.globl _CS1
                             34 	.globl _CS2
                             35 	.globl _CS3
                             36 	.globl _SCONV
                             37 	.globl _CCONV
                             38 	.globl _DMA
                             39 	.globl _ADCI
                             40 	.globl _P
                             41 	.globl _F1
                             42 	.globl _OV
                             43 	.globl _RS0
                             44 	.globl _RS1
                             45 	.globl _F0
                             46 	.globl _AC
                             47 	.globl _CY
                             48 	.globl _CAP2
                             49 	.globl _CNT2
                             50 	.globl _TR2
                             51 	.globl _XEN
                             52 	.globl _TCLK
                             53 	.globl _RCLK
                             54 	.globl _EXF2
                             55 	.globl _TF2
                             56 	.globl _WDE
                             57 	.globl _WDS
                             58 	.globl _WDR2
                             59 	.globl _WDR1
                             60 	.globl _PRE0
                             61 	.globl _PRE1
                             62 	.globl _PRE2
                             63 	.globl _PX0
                             64 	.globl _PT0
                             65 	.globl _PX1
                             66 	.globl _PT1
                             67 	.globl _PS
                             68 	.globl _PT2
                             69 	.globl _PADC
                             70 	.globl _PSI
                             71 	.globl _RXD
                             72 	.globl _TXD
                             73 	.globl _INT0
                             74 	.globl _INT1
                             75 	.globl _T0
                             76 	.globl _T1
                             77 	.globl _WR
                             78 	.globl _RD
                             79 	.globl _EX0
                             80 	.globl _ET0
                             81 	.globl _EX1
                             82 	.globl _ET1
                             83 	.globl _ES
                             84 	.globl _ET2
                             85 	.globl _EADC
                             86 	.globl _EA
                             87 	.globl _RI
                             88 	.globl _TI
                             89 	.globl _RB8
                             90 	.globl _TB8
                             91 	.globl _REN
                             92 	.globl _SM2
                             93 	.globl _SM1
                             94 	.globl _SM0
                             95 	.globl _T2
                             96 	.globl _T2EX
                             97 	.globl _IT0
                             98 	.globl _IE0
                             99 	.globl _IT1
                            100 	.globl _IE1
                            101 	.globl _TR0
                            102 	.globl _TF0
                            103 	.globl _TR1
                            104 	.globl _TF1
                            105 	.globl _DACCON
                            106 	.globl _DAC1H
                            107 	.globl _DAC1L
                            108 	.globl _DAC0H
                            109 	.globl _DAC0L
                            110 	.globl _SPICON
                            111 	.globl _SPIDAT
                            112 	.globl _ADCCON3
                            113 	.globl _ADCGAINH
                            114 	.globl _ADCGAINL
                            115 	.globl _ADCOFSH
                            116 	.globl _ADCOFSL
                            117 	.globl _B
                            118 	.globl _ADCCON1
                            119 	.globl _I2CCON
                            120 	.globl _ACC
                            121 	.globl _PSMCON
                            122 	.globl _ADCDATAH
                            123 	.globl _ADCDATAL
                            124 	.globl _ADCCON2
                            125 	.globl _DMAP
                            126 	.globl _DMAH
                            127 	.globl _DMAL
                            128 	.globl _PSW
                            129 	.globl _TH2
                            130 	.globl _TL2
                            131 	.globl _RCAP2H
                            132 	.globl _RCAP2L
                            133 	.globl _T2CON
                            134 	.globl _EADRL
                            135 	.globl _WDCON
                            136 	.globl _EDATA4
                            137 	.globl _EDATA3
                            138 	.globl _EDATA2
                            139 	.globl _EDATA1
                            140 	.globl _ETIM3
                            141 	.globl _ETIM2
                            142 	.globl _ETIM1
                            143 	.globl _ECON
                            144 	.globl _IP
                            145 	.globl _P3
                            146 	.globl _IE2
                            147 	.globl _IE
                            148 	.globl _P2
                            149 	.globl _I2CADD
                            150 	.globl _I2CDAT
                            151 	.globl _SBUF
                            152 	.globl _SCON
                            153 	.globl _P1
                            154 	.globl _TH1
                            155 	.globl _TH0
                            156 	.globl _TL1
                            157 	.globl _TL0
                            158 	.globl _TMOD
                            159 	.globl _TCON
                            160 	.globl _PCON
                            161 	.globl _DPP
                            162 	.globl _DPH
                            163 	.globl _DPL
                            164 	.globl _SP
                            165 	.globl _P0
                            166 ;--------------------------------------------------------
                            167 ; special function registers
                            168 ;--------------------------------------------------------
                            169 	.area RSEG    (DATA)
                    0080    170 _P0	=	0x0080
                    0081    171 _SP	=	0x0081
                    0082    172 _DPL	=	0x0082
                    0083    173 _DPH	=	0x0083
                    0084    174 _DPP	=	0x0084
                    0087    175 _PCON	=	0x0087
                    0088    176 _TCON	=	0x0088
                    0089    177 _TMOD	=	0x0089
                    008A    178 _TL0	=	0x008a
                    008B    179 _TL1	=	0x008b
                    008C    180 _TH0	=	0x008c
                    008D    181 _TH1	=	0x008d
                    0090    182 _P1	=	0x0090
                    0098    183 _SCON	=	0x0098
                    0099    184 _SBUF	=	0x0099
                    009A    185 _I2CDAT	=	0x009a
                    009B    186 _I2CADD	=	0x009b
                    00A0    187 _P2	=	0x00a0
                    00A8    188 _IE	=	0x00a8
                    00A9    189 _IE2	=	0x00a9
                    00B0    190 _P3	=	0x00b0
                    00B8    191 _IP	=	0x00b8
                    00B9    192 _ECON	=	0x00b9
                    00BA    193 _ETIM1	=	0x00ba
                    00BB    194 _ETIM2	=	0x00bb
                    00C4    195 _ETIM3	=	0x00c4
                    00BC    196 _EDATA1	=	0x00bc
                    00BD    197 _EDATA2	=	0x00bd
                    00BE    198 _EDATA3	=	0x00be
                    00BF    199 _EDATA4	=	0x00bf
                    00C0    200 _WDCON	=	0x00c0
                    00C6    201 _EADRL	=	0x00c6
                    00C8    202 _T2CON	=	0x00c8
                    00CA    203 _RCAP2L	=	0x00ca
                    00CB    204 _RCAP2H	=	0x00cb
                    00CC    205 _TL2	=	0x00cc
                    00CD    206 _TH2	=	0x00cd
                    00D0    207 _PSW	=	0x00d0
                    00D2    208 _DMAL	=	0x00d2
                    00D3    209 _DMAH	=	0x00d3
                    00D4    210 _DMAP	=	0x00d4
                    00D8    211 _ADCCON2	=	0x00d8
                    00D9    212 _ADCDATAL	=	0x00d9
                    00DA    213 _ADCDATAH	=	0x00da
                    00DF    214 _PSMCON	=	0x00df
                    00E0    215 _ACC	=	0x00e0
                    00E8    216 _I2CCON	=	0x00e8
                    00EF    217 _ADCCON1	=	0x00ef
                    00F0    218 _B	=	0x00f0
                    00F1    219 _ADCOFSL	=	0x00f1
                    00F2    220 _ADCOFSH	=	0x00f2
                    00F3    221 _ADCGAINL	=	0x00f3
                    00F4    222 _ADCGAINH	=	0x00f4
                    00F5    223 _ADCCON3	=	0x00f5
                    00F7    224 _SPIDAT	=	0x00f7
                    00F8    225 _SPICON	=	0x00f8
                    00F9    226 _DAC0L	=	0x00f9
                    00FA    227 _DAC0H	=	0x00fa
                    00FB    228 _DAC1L	=	0x00fb
                    00FC    229 _DAC1H	=	0x00fc
                    00FD    230 _DACCON	=	0x00fd
                            231 ;--------------------------------------------------------
                            232 ; special function bits
                            233 ;--------------------------------------------------------
                            234 	.area RSEG    (DATA)
                    008F    235 _TF1	=	0x008f
                    008E    236 _TR1	=	0x008e
                    008D    237 _TF0	=	0x008d
                    008C    238 _TR0	=	0x008c
                    008B    239 _IE1	=	0x008b
                    008A    240 _IT1	=	0x008a
                    0089    241 _IE0	=	0x0089
                    0088    242 _IT0	=	0x0088
                    0091    243 _T2EX	=	0x0091
                    0090    244 _T2	=	0x0090
                    009F    245 _SM0	=	0x009f
                    009E    246 _SM1	=	0x009e
                    009D    247 _SM2	=	0x009d
                    009C    248 _REN	=	0x009c
                    009B    249 _TB8	=	0x009b
                    009A    250 _RB8	=	0x009a
                    0099    251 _TI	=	0x0099
                    0098    252 _RI	=	0x0098
                    00AF    253 _EA	=	0x00af
                    00AE    254 _EADC	=	0x00ae
                    00AD    255 _ET2	=	0x00ad
                    00AC    256 _ES	=	0x00ac
                    00AB    257 _ET1	=	0x00ab
                    00AA    258 _EX1	=	0x00aa
                    00A9    259 _ET0	=	0x00a9
                    00A8    260 _EX0	=	0x00a8
                    00B7    261 _RD	=	0x00b7
                    00B6    262 _WR	=	0x00b6
                    00B5    263 _T1	=	0x00b5
                    00B4    264 _T0	=	0x00b4
                    00B3    265 _INT1	=	0x00b3
                    00B2    266 _INT0	=	0x00b2
                    00B1    267 _TXD	=	0x00b1
                    00B0    268 _RXD	=	0x00b0
                    00BF    269 _PSI	=	0x00bf
                    00BE    270 _PADC	=	0x00be
                    00BD    271 _PT2	=	0x00bd
                    00BC    272 _PS	=	0x00bc
                    00BB    273 _PT1	=	0x00bb
                    00BA    274 _PX1	=	0x00ba
                    00B9    275 _PT0	=	0x00b9
                    00B8    276 _PX0	=	0x00b8
                    00C7    277 _PRE2	=	0x00c7
                    00C6    278 _PRE1	=	0x00c6
                    00C5    279 _PRE0	=	0x00c5
                    00C3    280 _WDR1	=	0x00c3
                    00C2    281 _WDR2	=	0x00c2
                    00C1    282 _WDS	=	0x00c1
                    00C0    283 _WDE	=	0x00c0
                    00CF    284 _TF2	=	0x00cf
                    00CE    285 _EXF2	=	0x00ce
                    00CD    286 _RCLK	=	0x00cd
                    00CC    287 _TCLK	=	0x00cc
                    00CB    288 _XEN	=	0x00cb
                    00CA    289 _TR2	=	0x00ca
                    00C9    290 _CNT2	=	0x00c9
                    00C8    291 _CAP2	=	0x00c8
                    00D7    292 _CY	=	0x00d7
                    00D6    293 _AC	=	0x00d6
                    00D5    294 _F0	=	0x00d5
                    00D4    295 _RS1	=	0x00d4
                    00D3    296 _RS0	=	0x00d3
                    00D2    297 _OV	=	0x00d2
                    00D1    298 _F1	=	0x00d1
                    00D0    299 _P	=	0x00d0
                    00DF    300 _ADCI	=	0x00df
                    00DE    301 _DMA	=	0x00de
                    00DD    302 _CCONV	=	0x00dd
                    00DC    303 _SCONV	=	0x00dc
                    00DB    304 _CS3	=	0x00db
                    00DA    305 _CS2	=	0x00da
                    00D9    306 _CS1	=	0x00d9
                    00D8    307 _CS0	=	0x00d8
                    00EF    308 _MDO	=	0x00ef
                    00EE    309 _MDE	=	0x00ee
                    00ED    310 _MCO	=	0x00ed
                    00EC    311 _MDI	=	0x00ec
                    00EB    312 _I2CM	=	0x00eb
                    00EA    313 _I2CRS	=	0x00ea
                    00E9    314 _I2CTX	=	0x00e9
                    00E8    315 _I2CI	=	0x00e8
                    00FF    316 _ISPI	=	0x00ff
                    00FE    317 _WCOL	=	0x00fe
                    00FD    318 _SPE	=	0x00fd
                    00FC    319 _SPIM	=	0x00fc
                    00FB    320 _CPOL	=	0x00fb
                    00FA    321 _CPHA	=	0x00fa
                    00F9    322 _SPR1	=	0x00f9
                    00F8    323 _SPR0	=	0x00f8
                            324 ;--------------------------------------------------------
                            325 ; overlayable register banks
                            326 ;--------------------------------------------------------
                            327 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     328 	.ds 8
                            329 ;--------------------------------------------------------
                            330 ; internal ram data
                            331 ;--------------------------------------------------------
                            332 	.area DSEG    (DATA)
                            333 ;--------------------------------------------------------
                            334 ; overlayable items in internal ram 
                            335 ;--------------------------------------------------------
                            336 	.area OSEG    (OVR,DATA)
                            337 ;--------------------------------------------------------
                            338 ; indirectly addressable internal ram data
                            339 ;--------------------------------------------------------
                            340 	.area ISEG    (DATA)
                            341 ;--------------------------------------------------------
                            342 ; absolute internal ram data
                            343 ;--------------------------------------------------------
                            344 	.area IABS    (ABS,DATA)
                            345 	.area IABS    (ABS,DATA)
                            346 ;--------------------------------------------------------
                            347 ; bit data
                            348 ;--------------------------------------------------------
                            349 	.area BSEG    (BIT)
                            350 ;--------------------------------------------------------
                            351 ; paged external ram data
                            352 ;--------------------------------------------------------
                            353 	.area PSEG    (PAG,XDATA)
                            354 ;--------------------------------------------------------
                            355 ; external ram data
                            356 ;--------------------------------------------------------
                            357 	.area XSEG    (XDATA)
                            358 ;--------------------------------------------------------
                            359 ; absolute external ram data
                            360 ;--------------------------------------------------------
                            361 	.area XABS    (ABS,XDATA)
                            362 ;--------------------------------------------------------
                            363 ; external initialized ram data
                            364 ;--------------------------------------------------------
                            365 	.area XISEG   (XDATA)
                            366 	.area HOME    (CODE)
                            367 	.area GSINIT0 (CODE)
                            368 	.area GSINIT1 (CODE)
                            369 	.area GSINIT2 (CODE)
                            370 	.area GSINIT3 (CODE)
                            371 	.area GSINIT4 (CODE)
                            372 	.area GSINIT5 (CODE)
                            373 	.area GSINIT  (CODE)
                            374 	.area GSFINAL (CODE)
                            375 	.area CSEG    (CODE)
                            376 ;--------------------------------------------------------
                            377 ; global & static initialisations
                            378 ;--------------------------------------------------------
                            379 	.area HOME    (CODE)
                            380 	.area GSINIT  (CODE)
                            381 	.area GSFINAL (CODE)
                            382 	.area GSINIT  (CODE)
                            383 ;--------------------------------------------------------
                            384 ; Home
                            385 ;--------------------------------------------------------
                            386 	.area HOME    (CODE)
                            387 	.area HOME    (CODE)
                            388 ;--------------------------------------------------------
                            389 ; code
                            390 ;--------------------------------------------------------
                            391 	.area CSEG    (CODE)
                            392 ;------------------------------------------------------------
                            393 ;Allocation info for local variables in function 'WriteXData'
                            394 ;------------------------------------------------------------
                            395 ;offset                    Allocated to stack - offset -4
                            396 ;byte                      Allocated to stack - offset -5
                            397 ;page                      Allocated to registers r2 
                            398 ;oldDpp                    Allocated to registers r6 
                            399 ;oldea                     Allocated to registers r5 
                            400 ;a                         Allocated to registers r3 r4 
                            401 ;------------------------------------------------------------
                            402 ;	SRC\xdata.c:9: void WriteXData(char page, unsigned int offset, char byte)
                            403 ;	-----------------------------------------
                            404 ;	 function WriteXData
                            405 ;	-----------------------------------------
   0000                     406 _WriteXData:
                    0002    407 	ar2 = 0x02
                    0003    408 	ar3 = 0x03
                    0004    409 	ar4 = 0x04
                    0005    410 	ar5 = 0x05
                    0006    411 	ar6 = 0x06
                    0007    412 	ar7 = 0x07
                    0000    413 	ar0 = 0x00
                    0001    414 	ar1 = 0x01
   0000 C0*00               415 	push	_bp
   0002 85 81*00            416 	mov	_bp,sp
   0005 AA 82               417 	mov	r2,dpl
                            418 ;	SRC\xdata.c:14: unsigned char xdata *a  = (char xdata*)offset;
   0007 E5*00               419 	mov	a,_bp
   0009 24 FC               420 	add	a,#0xfc
   000B F8                  421 	mov	r0,a
   000C 86 03               422 	mov	ar3,@r0
   000E 08                  423 	inc	r0
   000F 86 04               424 	mov	ar4,@r0
                            425 ;	SRC\xdata.c:16: oldea = EA;
   0011 A2 AF               426 	mov	c,_EA
   0013 E4                  427 	clr	a
   0014 33                  428 	rlc	a
   0015 FD                  429 	mov	r5,a
                            430 ;	SRC\xdata.c:17: EA = 0;
   0016 C2 AF               431 	clr	_EA
                            432 ;	SRC\xdata.c:19: oldDpp = DPP;
   0018 AE 84               433 	mov	r6,_DPP
                            434 ;	SRC\xdata.c:20: DPP = page;
   001A 8A 84               435 	mov	_DPP,r2
                            436 ;	SRC\xdata.c:21: *a  = byte;
   001C E5*00               437 	mov	a,_bp
   001E 24 FB               438 	add	a,#0xfb
   0020 F8                  439 	mov	r0,a
   0021 86 02               440 	mov	ar2,@r0
   0023 8B 82               441 	mov	dpl,r3
   0025 8C 83               442 	mov	dph,r4
   0027 EA                  443 	mov	a,r2
   0028 F0                  444 	movx	@dptr,a
                            445 ;	SRC\xdata.c:22: DPP = oldDpp;
   0029 8E 84               446 	mov	_DPP,r6
                            447 ;	SRC\xdata.c:24: EA = oldea;
   002B ED                  448 	mov	a,r5
   002C 24 FF               449 	add	a,#0xff
   002E 92 AF               450 	mov	_EA,c
   0030 D0*00               451 	pop	_bp
   0032 22                  452 	ret
                            453 ;------------------------------------------------------------
                            454 ;Allocation info for local variables in function 'ReadXData'
                            455 ;------------------------------------------------------------
                            456 ;offset                    Allocated to stack - offset -4
                            457 ;page                      Allocated to registers r2 
                            458 ;oldDpp                    Allocated to registers r6 
                            459 ;byte                      Allocated to registers r3 
                            460 ;oldea                     Allocated to registers r5 
                            461 ;a                         Allocated to registers r3 r4 
                            462 ;------------------------------------------------------------
                            463 ;	SRC\xdata.c:27: char ReadXData(char page, unsigned int offset)
                            464 ;	-----------------------------------------
                            465 ;	 function ReadXData
                            466 ;	-----------------------------------------
   0033                     467 _ReadXData:
   0033 C0*00               468 	push	_bp
   0035 85 81*00            469 	mov	_bp,sp
   0038 AA 82               470 	mov	r2,dpl
                            471 ;	SRC\xdata.c:32: unsigned char xdata *a  = (char xdata*)offset;
   003A E5*00               472 	mov	a,_bp
   003C 24 FC               473 	add	a,#0xfc
   003E F8                  474 	mov	r0,a
   003F 86 03               475 	mov	ar3,@r0
   0041 08                  476 	inc	r0
   0042 86 04               477 	mov	ar4,@r0
                            478 ;	SRC\xdata.c:34: oldea = EA;
   0044 A2 AF               479 	mov	c,_EA
   0046 E4                  480 	clr	a
   0047 33                  481 	rlc	a
   0048 FD                  482 	mov	r5,a
                            483 ;	SRC\xdata.c:35: EA = 0;
   0049 C2 AF               484 	clr	_EA
                            485 ;	SRC\xdata.c:37: oldDpp = DPP;
   004B AE 84               486 	mov	r6,_DPP
                            487 ;	SRC\xdata.c:38: DPP = page;
   004D 8A 84               488 	mov	_DPP,r2
                            489 ;	SRC\xdata.c:39: byte = *a;
   004F 8B 82               490 	mov	dpl,r3
   0051 8C 83               491 	mov	dph,r4
   0053 E0                  492 	movx	a,@dptr
   0054 FB                  493 	mov	r3,a
                            494 ;	SRC\xdata.c:40: DPP = oldDpp;
   0055 8E 84               495 	mov	_DPP,r6
                            496 ;	SRC\xdata.c:42: EA = oldea;
   0057 ED                  497 	mov	a,r5
   0058 24 FF               498 	add	a,#0xff
   005A 92 AF               499 	mov	_EA,c
                            500 ;	SRC\xdata.c:44: return byte;
   005C 8B 82               501 	mov	dpl,r3
   005E D0*00               502 	pop	_bp
   0060 22                  503 	ret
                            504 ;------------------------------------------------------------
                            505 ;Allocation info for local variables in function 'WriteMax'
                            506 ;------------------------------------------------------------
                            507 ;byte                      Allocated to stack - offset -3
                            508 ;offset                    Allocated to registers r2 r3 
                            509 ;------------------------------------------------------------
                            510 ;	SRC\xdata.c:48: void WriteMax(unsigned int offset, char byte)
                            511 ;	-----------------------------------------
                            512 ;	 function WriteMax
                            513 ;	-----------------------------------------
   0061                     514 _WriteMax:
   0061 C0*00               515 	push	_bp
   0063 85 81*00            516 	mov	_bp,sp
   0066 AA 82               517 	mov	r2,dpl
   0068 AB 83               518 	mov	r3,dph
                            519 ;	SRC\xdata.c:50: WriteXData(MAX_PAGE, offset, byte);
   006A A8*00               520 	mov	r0,_bp
   006C 18                  521 	dec	r0
   006D 18                  522 	dec	r0
   006E 18                  523 	dec	r0
   006F E6                  524 	mov	a,@r0
   0070 C0 E0               525 	push	acc
   0072 C0 02               526 	push	ar2
   0074 C0 03               527 	push	ar3
   0076 75 82 08            528 	mov	dpl,#0x08
   0079 12s00r00            529 	lcall	_WriteXData
   007C 15 81               530 	dec	sp
   007E 15 81               531 	dec	sp
   0080 15 81               532 	dec	sp
   0082 D0*00               533 	pop	_bp
   0084 22                  534 	ret
                            535 ;------------------------------------------------------------
                            536 ;Allocation info for local variables in function 'ReadMax'
                            537 ;------------------------------------------------------------
                            538 ;offset                    Allocated to registers r2 r3 
                            539 ;------------------------------------------------------------
                            540 ;	SRC\xdata.c:53: char ReadMax(unsigned int offset)
                            541 ;	-----------------------------------------
                            542 ;	 function ReadMax
                            543 ;	-----------------------------------------
   0085                     544 _ReadMax:
   0085 AA 82               545 	mov	r2,dpl
   0087 AB 83               546 	mov	r3,dph
                            547 ;	SRC\xdata.c:55: return ReadXData(MAX_PAGE, offset);
   0089 C0 02               548 	push	ar2
   008B C0 03               549 	push	ar3
   008D 75 82 08            550 	mov	dpl,#0x08
   0090 12s00r33            551 	lcall	_ReadXData
   0093 15 81               552 	dec	sp
   0095 15 81               553 	dec	sp
   0097 22                  554 	ret
                            555 	.area CSEG    (CODE)
                            556 	.area CONST   (CODE)
                            557 	.area XINIT   (CODE)
                            558 	.area CABS    (ABS,CODE)
